name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        yarn install --frozen-lockfile
    
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Lint frontend
      run: |
        cd frontend
        yarn lint || true  # Don't fail on lint errors, just warn
    
    - name: Test frontend build
      run: |
        cd frontend
        REACT_APP_BACKEND_URL=http://localhost:8000 yarn build
    
    - name: Test backend
      run: |
        cd backend
        python -m pytest || true  # Don't fail if no tests exist
    
    - name: Test Docker build
      run: |
        docker build -t file-manager-test .
    
    - name: Test Docker run
      run: |
        docker run -d --name test-container -p 3000:3000 \
          -e MONGO_URL="mongodb://localhost:27017" \
          -e DB_NAME="test_db" \
          -e APPWRITE_ENDPOINT="https://test.appwrite.io" \
          -e APPWRITE_PROJECT_ID="test_project" \
          -e APPWRITE_API_KEY="test_key" \
          -e APPWRITE_BUCKET_ID="test_bucket" \
          file-manager-test
        
        # Wait for container to start
        sleep 10
        
        # Test if container is running
        docker ps | grep test-container
        
        # Cleanup
        docker stop test-container
        docker rm test-container
    
    - name: Notify on success
      if: success()
      run: echo "✅ All tests passed! Ready for deployment."
    
    - name: Notify on failure
      if: failure()
      run: echo "❌ Tests failed! Please check the logs."

  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
